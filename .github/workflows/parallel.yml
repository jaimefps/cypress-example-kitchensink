# Note: make sure to use the same version of cypress-io/github-action
# in all jobs, otherwise the last version wins I believe
name: Using Cypress GH Action

on: [push, workflow_dispatch]

jobs:
  # single job that generates and outputs a common id
  prepare:
    runs-on: ubuntu-18.04
    outputs:
      uuid: ${{ steps.uuid.outputs.value }}
    steps:
      - name: 'uuid'
        id: uuid
        run: echo "::set-output name=value::sha-$GITHUB_SHA-time-$(date +"%s")"

  parallel-runs:
    name: Parallel 4x
    runs-on: ubuntu-18.04
    needs: ['prepare']
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 4 copies of the current job in parallel
        # the actual items in the array do not matter
        # we just need to "force" GitHub CI to create 4 jobs
        machines: [1, 2, 3, 4]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Print CI env variables
        run: |
          npm i -g @bahmutov/print-env@2
          print-env GITHUB BUILD ACTIONS || true

      # because of "record" and "parallel" parameters
      # these containers will load balance all found tests among themselves
      - name: run tests
        uses: cypress-io/github-action@v4
        timeout-minutes: 5
        with:
          record: true
          parallel: true
          # ci-build-id: ${{ needs.prepare.outputs.uuid }}
          group: GH Action parallel
          start: npm start
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.dashboardRecordKey }}
